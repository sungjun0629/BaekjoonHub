#include<iostream>

using namespace std;



int N;  int tem;
int exist[110000] = { 0 , }; long long piv = 0;
long long ret; 
int main()
{
	cin >> N;

	for (int i = 1; i <= N; i++)
	{
		//수열에 나타나는 수는 모두 1 이상 100, 000 이하이다.
		cin >> tem;
		
		// 입력한 숫자의 인덱스를 넣어준다. 
		// 중복하는 수가 없다면 
		if(!exist[tem] && piv == 0)	{
			exist[tem] = i;
			ret += i;
			//cout << i << " 이고" << ret << endl;
		}	
		// 중복하는 수가 있다면 
		else
		{
			// 마지막으로 중복되었던 수의 인덱스를 넣어준다. 
			if(piv < exist[tem]) piv = exist[tem];
			// 중복되는 수의 인덱스부터 현재 인덱스까지 더해준다. 
			ret += (i -piv);
			// 마지막으로 중복되는 수의 인덱스를 초기화해준다. 
			exist[tem] = i;
			//cout << i << " 이고 " << ret <<"이고 "<<piv << endl;
		}

	}
	// 연속한 수를 뽑았을 때
	// 같은 수가 등장하지 않는 경우 
	// 1개, 2개, 3개, 4개 .. .
	// 직접 뽑아본다(X) -> 길이가 100,000 이므로... (100,000) * (99,999) * ... 
	

	// 첫 번째 수를 기준으로 할 때,
	// 첫 번째 수와 같은 수의 인덱스를 찾는다?? 
	// 중복되는 것이 존재한다. 
	// 1 2 3 4 1 2 
	// 1 -> 1 
	// 1 2 -> 1, 2, 1 2 -> 2개 추가 
	// 1 2 3 - > 1, 2, 3, 1 2 , 2 3,  1 2 3 -> 3개 추가
	// 1 2 3 4 -> 1, 2, 3, 4, 1 2, 2 3 , 3 4 ,1 2 3 , 2 3 4 , 1 2 3 4 -> 4개 추가  
	// 1 2 3 4 1 -> 1, 2 ,3 , 4 ,1 , 1 2 , 2 3 ,3 4, 4 1, 1 2 3 ,2 3 4 , 3 4 1 , 1 2 3 4, 2 3 4 1  
	// -> 4개 추가 
	

	// 1 2 3 2 1
	// -> 1+ 2+ 3 + 2(4-2) + 3(5-2) 
	// 끝에 추가한 수를 바탕으로 
	// 중복되는 숫자가 있는 것까지의 개수만큼 더해준다?
	
	// 중복되는 수의 인덱스를 변수에 저장을 한다.
	cout << ret;

	return 0;


}